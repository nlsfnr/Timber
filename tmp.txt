entrypoint {
  000 Push   8
  001 Push   0
  002 Store
  003 Call   4
  004 Halt
} entrypoint
def main {
call fn {
  005 Call   20
} call fn
  006 Pop
call return {
  007 Push   0
  008 Push   0
  009 Load
  010 Store
  011 Call   107
} call return
  012 Pop
  013 Push   0
  014 Load
  015 Push   0
  016 Sub
  017 Push   0
  018 Store
  019 Rot
  020 Ret
} def main
def fn {

TOS += 2
  021 Push   0
  022 Load
  023 Push   2
  024 Add
  025 Push   0
  026 Store

Var a @ -1 = 97
  027 Push   97
  028 Push   0
  029 Load
  030 Push   1
  031 Sub
  032 Store

Var b # - 1 = 98
  033 Push   98
  034 Push   0
  035 Load
  036 Push   1
  037 Sub
  038 Store
call print {
  039 Push   0
  040 Load
  041 Push   2
  042 Sub
  043 Load
  044 Push   0
  045 Load
  046 Store
  047 Call   95
} call print
  048 Pop
call print {
  049 Push   0
  050 Load
  051 Push   1
  052 Sub
  053 Load
  054 Push   0
  055 Load
  056 Store
  057 Call   95
} call print
  058 Pop
call return {
  059 Push   0
  060 Push   0
  061 Load
  062 Store
  063 Call   107
} call return
  064 Pop
  065 Push   0
  066 Load
  067 Push   2
  068 Sub
  069 Push   0
  070 Store
  071 Rot
  072 Ret
} def fn
  073 Halt
def add {
  074 Push   0
  075 Load
  076 Push   1
  077 Sub
  078 Load
  079 Push   0
  080 Load
  081 Load
  082 Add
  083 Rot
  084 Ret
} def add
def shl {
  085 Push   0
  086 Load
  087 Push   1
  088 Sub
  089 Load
  090 Push   0
  091 Load
  092 Load
  093 Shl
  094 Rot
  095 Ret
} def shl
def print {
  096 Push   0
  097 Load
  098 Load
  099 Print
  100 Push   0
  101 Rot
  102 Ret
} def print
def exit {
  103 Pop
  104 Push   0
  105 Load
  106 Load
  107 Halt
} def exit
def return {
  108 Push   0
  109 Load
  110 Load
  111 Rot
  112 Pop
  113 Rot
  114 Ret
} def return
